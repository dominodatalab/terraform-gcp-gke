version: 2
jobs:
  build:
    docker:
      - image: google/cloud-sdk
    environment:
      CLOUDSDK_CORE_PROJECT: domino-eng-platform-dev
      CLOUDSDK_COMPUTE_ZONE: us-west1-a
      GOOGLE_APPLICATION_CREDENTIALS: /root/.config/gcloud/legacy_credentials/terraform-gke-test@domino-eng-platform-dev.iam.gserviceaccount.com/adc.json
      TERRAFORM_VERSION: 1.0.5

    steps:
      - checkout

      - run:
          name: Install Terraform
          command: |
            apt-get install -y wget zip
            wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
            unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin

      - run:
          name: Activate GCP Service Account
          command: echo ${CLOUDSDK_SERVICE_KEY} | gcloud auth activate-service-account --key-file=-

      - run:
          name: Configure test cluster env
          command: |
            echo 'export TF_VAR_description="CircleCI Build for ${CIRCLE_PR_REPONAME}: ${CIRCLE_BUILD_URL}"' >> $BASH_ENV
            echo 'export TF_VAR_filestore_disabled="true"' >> $BASH_ENV
            echo 'export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp-${CIRCLE_BUILD_NUM}.json"' >> $BASH_ENV
            echo 'export WORKSPACE=gcp-gke-circleci-${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo ${CLOUDSDK_SERVICE_KEY} > /tmp/gcp-${CIRCLE_BUILD_NUM}.json

      - run:
          name: Terraform fmt
          command: terraform fmt -check

      - run:
          name: Terraform init
          command: terraform init ./tests

      - run:
          name: Terraform validate
          command: terraform validate ./tests

      - run:
          name: Terraform workspace create
          command: terraform workspace new ${WORKSPACE} ./tests

      - run:
          name: Terraform apply
          command: terraform apply -auto-approve ./tests

      - run:
          name: Terraform plan
          command: terraform plan -detailed-exitcode ./tests

      - run:
          name: Terraform destroy
          command: terraform destroy -auto-approve ./tests || (sleep 5m && terraform destroy -auto-approve ./tests)
          when: always

      - run:
          name: Terraform workspace delete
          command: |
            terraform workspace select default ./tests
            terraform workspace delete ${WORKSPACE} ./tests
          when: always
