version: 2.1

orbs:
  terraform: circleci/terraform@3.2.0

environment: &default_environment
  CLOUDSDK_CORE_PROJECT: domino-eng-platform-dev
  CLOUDSDK_COMPUTE_ZONE: us-west1-a
  GOOGLE_APPLICATION_CREDENTIALS: /root/.config/gcloud/legacy_credentials/terraform-gke-test@domino-eng-platform-dev.iam.gserviceaccount.com/adc.json

jobs:
  pre-commit:
    docker:
      - image: cimg/python:3.11.1
    parameters:
      terraform_version:
        type: string
    environment: *default_environment

    steps:
      - checkout

      - terraform/install:
          terraform_version: <<parameters.terraform_version>>
      - run:
          name: pre-commit
          command: |
            curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
            curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
            curl -L https://github.com/terraform-docs/terraform-docs/releases/download/v0.16.0/terraform-docs-v0.16.0-linux-amd64.tar.gz | tar -C /tmp -xzf - && chmod +x /tmp/terraform-docs && sudo mv /tmp/terraform-docs /usr/local/bin
            pip3 install checkov pre-commit
            SKIP=no-commit-to-branch pre-commit run --all-files

  test:
    docker:
      - image: google/cloud-sdk
    parameters:
      terraform_version:
        type: string
    environment: *default_environment

    steps:
      - checkout

      - run:
          name: install pre-reqs
          command: |
            apt-get install -y wget zip

      - terraform/install:
          terraform_version: <<parameters.terraform_version>>

      - run:
          name: Configure test cluster env
          command: |
            echo 'export TF_VAR_description="CircleCI Build for ${CIRCLE_PR_REPONAME}: ${CIRCLE_BUILD_URL}"' >> $BASH_ENV
            echo 'export TF_VAR_filestore_disabled="true"' >> $BASH_ENV
            echo 'export GOOGLE_CREDENTIALS="$CLOUDSDK_SERVICE_KEY"' >> $BASH_ENV
            echo 'export WORKSPACE=gcp-gke-circleci-${CIRCLE_BUILD_NUM}' >> $BASH_ENV

      - run:
          name: Test Terraform
          command: |
            cd tests
            terraform init
            terraform validate
            terraform workspace new ${WORKSPACE}
            terraform apply -auto-approve
            terraform plan -detailed-exitcode

      - run:
          name: Terraform destroy
          command: |
            cd tests
            terraform destroy -auto-approve || (sleep 5m && terraform destroy -auto-approve)
          when: always

      - run:
          name: Terraform workspace delete
          command: |
            cd tests
            terraform workspace select default
            terraform workspace delete ${WORKSPACE}
          when: always

parameters:
  terraform_version:
    default: "1.3.6"
    type: string

workflows:
  build:
    jobs:
      - pre-commit:
          terraform_version: << pipeline.parameters.terraform_version >>
      - test:
          terraform_version: << pipeline.parameters.terraform_version >>
          requires:
            - pre-commit
